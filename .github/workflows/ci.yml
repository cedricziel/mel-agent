name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: agentsaas
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.modcache
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build server
        run: go build ./cmd/server

      - name: Run Go tests
        run: go test ./...

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install
        working-directory: web

      - name: Run frontend tests
        run: npm run test:run
        working-directory: web

      - name: Build web UI
        run: npm run build
        working-directory: web

      - name: Lint web
        run: npm run lint
        working-directory: web

      - name: Start backend for E2E tests
        run: go run ./cmd/server &
        env:
          PORT: 8080
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/agentsaas?sslmode=disable

      - name: Wait for backend to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done'

      - name: Start frontend for E2E tests
        run: npm run preview &
        working-directory: web
        env:
          PORT: 5173

      - name: Wait for frontend to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:5173; do sleep 1; done'

      - name: Run Cypress E2E tests
        run: npm run test:e2e
        working-directory: web
        env:
          CYPRESS_baseUrl: http://localhost:5173
