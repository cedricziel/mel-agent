name: Cypress Parallel Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend tests and build
  backend:
    name: Backend Tests
    runs-on: ubuntu-24.04
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: agentsaas
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run Go tests
        run: go test ./...

      - name: Build server
        run: go build ./cmd/server

      - name: Upload server binary
        uses: actions/upload-artifact@v4
        with:
          name: server-binary
          path: server
          retention-days: 1

  # E2E tests - let Cypress action drive everything
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-24.04
    needs: [backend]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: agentsaas
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download server binary
        uses: actions/download-artifact@v4
        with:
          name: server-binary

      - name: Make server binary executable
        run: chmod +x server

      - name: Start backend server
        run: |
          ./server &
          echo $! > server.pid
        env:
          PORT: 8080
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/agentsaas?sslmode=disable

      - name: Wait for backend to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: web/pnpm-lock.yaml

      # Simplified: let Cypress action handle install → build → start → test
      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: web
          build: pnpm build
          start: pnpm preview --port 5173
          wait-on: 'http://localhost:5173'
          wait-on-timeout: 60
          browser: chrome
          spec: cypress/e2e/**/*.cy.js
        env:
          CYPRESS_baseUrl: http://localhost:5173
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Stop backend server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi